{
  "reactComponent": {
    "scope": "typescriptreact",
    "prefix": ["comp", "component"],
    "body": [
      "export interface ${1:Component}Props {",
      "  ",
      "}",
      "",
      "export function ${1:Component} (props: ${1:Component}Props): React.JSX.Element {",
      "  return (",
      "    <${2:Main}>",
      "      $0",
      "    </${2:Main}>",
      "  )",
      "}",
      "",
    ],
  },
  "reactPage": {
    "scope": "typescriptreact",
    "prefix": ["page"],
    "body": [
      "export function $1Page (): React.JSX.Element {",
      "  return (",
      "    <${2:Main}>",
      "      $0",
      "    </${2:Main}>",
      "  )",
      "}",
      "",
    ],
  },
  "styledComponent": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "styled",
    "body": [
      "import styled from 'styled-components';",
      "",
      "export const ${1:Container} = styled.${2:View}`",
      "  ${3}",
      "`;",
      "",
    ],
  },
  "componentFunctionalTypescript": {
    "scope": "typescriptreact",
    "prefix": "rnfc",
    "body": [
      "import React from 'react';",
      "",
      "// import { Container } from './styles';",
      "",
      "const ${1:${TM_DIRECTORY/^.*(\\/|\\\\)([^(\\/|\\\\)]+)$/$2/}}: React.FC = () => {",
      "  return <View />;",
      "}",
      "",
      "export default ${1:${TM_DIRECTORY/^.*(\\/|\\\\)([^(\\/|\\\\)]+)$/$2/}};",
    ],
  },
  "reactState": {
    "scope": "typescript,typescriptreact",
    "prefix": ["stt", "state"],
    "body": ["const [$1, set$2] = useState<$3>($4)", "$0"],
  },
  "reactHook": {
    "scope": "typescript,typescriptreact",
    "prefix": ["hook", "use"],
    "body": ["export function use$1($2) {", "  $0", "}", ""],
  },
  "reactContext": {
    "scope": "typescriptreact",
    "prefix": ["context"],
    "body": ["const context = useMemo$1<I$2>(() => ({ $0 }), [])", ""],
  },
  "createCallback": {
    "scope": "typescriptreact",
    "prefix": ["rcb", "cb"],
    "body": ["const handle$1 = useCallback(($2) => {$0}, [])", ""],
  },
}
